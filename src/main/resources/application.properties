server.port=8081


#***************************
#*******DATABASE************
#***************************
#POSTGRESQL
#spring.datasource.url=jdbc:postgresql://localhost/sarafan
#spring.datasource.username=postgres
#spring.datasource.password=123456
#spring.jpa.generate-ddl=true
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#MySQL
spring.datasource.url = jdbc:mysql://localhost:3306/sarafan?createDatabaseIfNotExist=true&serverTimezone=UTC&sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false
spring.datasource.username = root
spring.datasource.password = ${dbSecret}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL= DEBUG


#***************************
#*******SECURITY************
#***************************
#Google
security.oauth2.client.clientId=931400996020-a8bf0ramkhalkavlapmmcbj15unhitta.apps.googleusercontent.com
security.oauth2.client.clientSecret=${clientSecret}
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.client.scope=openid,email,profile
security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.resource.preferTokenInfo=true

#for OAuth to fix exception
spring.main.allow-bean-definition-overriding=true

#Spring Session
spring.session.jdbc.initialize-schema=always
spring.session.jdbc.table-name=SPRING_SESSION
spring.session.jdbc.schema=classpath:session_tables.sql